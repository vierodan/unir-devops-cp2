apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: avrakscp2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: avrcp2acr.azurecr.io/redis:cp2
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "250m"
            memory: "256Mi"
        ports:
        - containerPort: 6379
        env:
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        volumeMounts:
        - name: redis-data
          mountPath: /data

      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: avrakscp2
spec:
  ports:
  - port: 6379
  selector:
    app: backend

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: avrakscp2
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: avrakscp2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: avrcp2acr.azurecr.io/azure-vote-front:cp2
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "250m"
            memory: "256Mi"
        ports:
        - containerPort: 80
        env:
        - name: REDIS
          value: "backend"

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: avrakscp2
spec:
  type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: frontend



