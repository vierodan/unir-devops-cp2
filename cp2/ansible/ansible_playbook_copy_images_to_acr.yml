---
- name: ++++++++++ DEPLOY IMAGES TO AZURE CONTAINER REGISTRY (ACR) ++++++++++
  hosts: localhost
  gather_facts: true
  vars:
    nginx_source_image: docker://nginx:latest
    nginx_destination_image: .azurecr.io/nginx:cp2
    redis_source_image: docker://mcr.microsoft.com/oss/bitnami/redis:6.0.8
    redis_destination_image: .azurecr.io/redis:cp2
    front_source_image: docker://mcr.microsoft.com/azuredocs/azure-vote-front:v1
    front_destination_image: .azurecr.io/azure-vote-front:cp2
    arch: amd64
    os: linux

  tasks:
    - name: Ensure login to Azure
      azure.azcollection.azure_rm_resourcegroup_info:
        subscription_id: "{{ lookup('env', 'SUBSCRIPTION_ID') }}"
      register: azure_rg_info
      ignore_errors: true

    - name: Login to Azure CLI
      ansible.builtin.command: >
        az login --service-principal
        --username "{{ lookup('env', 'CLIENT_ID') }}"
        --password "{{ lookup('env', 'CLIENT_SECRET') }}"
        --tenant "{{ lookup('env', 'TENANT_ID') }}"
      register: az_login
      changed_when: az_login.rc != 0
      failed_when: az_login.rc != 0
      when: azure_rg_info.failed

    - name: Set Azure subscription
      ansible.builtin.command: >
        az account set
        --subscription
        "{{ lookup('env', 'SUBSCRIPTION_ID') }}"
      register: azure_subscription
      changed_when: azure_subscription.rc != 0
      failed_when: azure_subscription.rc != 0
      when: azure_rg_info.failed

    - name: Veryfy login process
      azure.azcollection.azure_rm_resourcegroup_info:
        subscription_id: "{{ lookup('env', 'SUBSCRIPTION_ID') }}"
      register: azure_rg_info_post_login
      ignore_errors: true

    - name: Fails if no login
      ansible.builtin.fail:
        msg: "No se pudo autenticar en Azure. Por favor, verifica tus credenciales."
      when: azure_rg_info_post_login.failed

    - name: Get ACR login access token
      ansible.builtin.command: >
        az acr login --name {{ lookup('env', 'ACR_NAME') }} --expose-token
      register: acr_login_result
      changed_when: acr_login_result.rc != 0
      failed_when: acr_login_result.rc != 0

    - name: Parse ACR login access token
      ansible.builtin.set_fact:
        acr_access_token: "{{ acr_login_result.stdout | from_json | json_query('accessToken') }}"

    - name: Log in to Azure Container Registry with Podman using access token
      ansible.builtin.command: >
        podman login {{ lookup('env', 'ACR_NAME') }}.azurecr.io -u 00000000-0000-0000-0000-000000000000 -p "{{ acr_access_token }}"
      register: podman_login_result
      changed_when: podman_login_result.rc != 0
      failed_when: podman_login_result.rc != 0

    - name: Copy nginx from Docker to Azure Container Registry
      ansible.builtin.command: >
        skopeo copy
        --override-arch {{ arch }}
        --override-os {{ os }}
        {{ nginx_source_image }}
        docker://{{ lookup('env', 'ACR_NAME') }}{{ nginx_destination_image }}
      register: nginx_skopeo_copy
      changed_when: nginx_skopeo_copy.rc != 0
      failed_when: nginx_skopeo_copy.rc != 0

    - name: Display Skopeo copy result for nginx
      ansible.builtin.debug:
        var: nginx_skopeo_copy.stdout_lines

    - name: Copy redis image from Microsoft to Azure Container Registry
      ansible.builtin.command: >
        skopeo copy
        --override-arch {{ arch }}
        --override-os {{ os }}
        {{ redis_source_image }}
        docker://{{ lookup('env', 'ACR_NAME') }}{{ redis_destination_image }}
      register: redis_skopeo_copy
      changed_when: redis_skopeo_copy.rc != 0
      failed_when: redis_skopeo_copy.rc != 0

    - name: Display Skopeo copy result for redis
      ansible.builtin.debug:
        var: redis_skopeo_copy.stdout_lines

    - name: Copy voting front image from Microsoft to Azure Container Registry
      ansible.builtin.command: >
        skopeo copy
        --override-arch {{ arch }}
        --override-os {{ os }}
        {{ front_source_image }}
        docker://{{ lookup('env', 'ACR_NAME') }}{{ front_destination_image }}
      register: voting_skopeo_copy
      changed_when: voting_skopeo_copy.rc != 0
      failed_when: voting_skopeo_copy.rc != 0

    - name: Display Skopeo copy result for voting front
      ansible.builtin.debug:
        var: voting_skopeo_copy.stdout_lines
