---
- name: Run nginx container with podmsn on Azure VM
  hosts: webserver
  gather_facts: yes
  remote_user: adminuser
  become: yes
  vars:
    container_image: "avrcp2acr.azurecr.io/nginx:cp2"
    container_name: "nginxwebserver"
    host_port: 80  # Port on the Azure VM to be accessible from the internet
    container_port: 80  # Port on the container

  tasks:
    - name: Login to Azure CLI
      ansible.builtin.command: >
        az login --service-principal
        --username "{{ lookup('env', 'CLIENT_ID') }}"
        --password "{{ lookup('env', 'CLIENT_SECRET') }}"
        --tenant "{{ lookup('env', 'TENANT_ID') }}"

    - name: Set Azure subscription
      ansible.builtin.command: >
        az account set --subscription "{{ lookup('env', 'SUBSCRIPTION_ID') }}"


    - name: Get ACR login access token
      ansible.builtin.command: >
        az acr login --name {{ lookup('env', 'ACR_NAME') }} --expose-token
      register: acr_login_result

    - name: Parse ACR login access token
      set_fact:
        acr_access_token: "{{ acr_login_result.stdout | from_json | json_query('accessToken') }}"

    - name: Log in to Azure Container Registry with Podman using access token
      ansible.builtin.command: >
        podman login {{ lookup('env', 'ACR_NAME') }}.azurecr.io -u 00000000-0000-0000-0000-000000000000 -p "{{ acr_access_token }}"
      register: login_result
      ignore_errors: yes

    - name: Fail if login to ACR failed
      fail:
        msg: "Failed to log in to Azure Container Registry"
      when: login_result.rc != 0


    - name: Pull container image from Azure Container Registry
      shell: podman pull {{ container_image }}
      register: pull_result
      ignore_errors: yes

    - name: Debug pull result
      debug:
        var: pull_result

    - name: Run container using Podman with port mapping
      shell: podman run -d --name {{ container_name }} -p {{ host_port }}:{{ container_port }} {{ container_image }}
      register: run_result
      ignore_errors: yes

    - name: Debug run result
      debug:
        var: run_result
